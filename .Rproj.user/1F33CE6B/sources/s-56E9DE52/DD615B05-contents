getwd()
setwd("C:/Users/Joerio Chandra/Documents/BENQ/College/Semester 6/Data Science (STIS3023)/")

install.packages("readxl")
library(readxl)

x<-vector("numeric",length=10)
x
class(x)
x<-c(0,1,2,3,4,5,6,7,8,9)

length(x)

xx<-as.logical(x)

x4<-vector('numeric', length=10)
x4<-c(1,2,3,4,5,6,7,8,9,10)
x4[1]
x4[4]
x4[1:3]
x4[-2]
x4[0]
x4[5:8]

#change to float?
x4<-1:10
x4
x4<-c(x4[1:5],5.5,x4[6:10])
x4

#delete element-11
x4<-x4[1:10]
x4
#delete element-4 & 5
x4<-c(x4[1:3], x4[6:10])
x4

x5<-vector('numeric',length=5)
x5<-c(1,2,3,4,5)
x6<-vector('numeric',length=5)
x6<-c(6,7,8,9,10)
x5*x6


# MATRIX
m<-matrix(1:6,nrow=2, ncol=3)
m<-matrix(1:6,nrow=2, ncol=3, byrow=TRUE)
m<-matrix(1:6,2, 3, 0)

dim(m)

m1<-1:10
dim(m1)<-c(2,5)

x<-1:3
y<-10:12
cbind(x,y)
rbind(x,y)


x<-list(3, "c")
y<-list(1, "a", TRUE, 1+4i)
z<-list(var1=1:4, var2=0.6)
class(x)
typeof(x)

x[[2]]
y[[3]]
z$var1
names(y)<-c("no","char","logic","complex")
y

m2<-matrix(1:4, nrow=2, ncol=2)
m2
dimnames(m2)<-list(c("row1","row2"),c("col1","col2"))
m2

# 25/4/2022
x<-data.frame(foo = 1:4, bar = c(T, T, F, F))
x

kids<-c('Jack','Jill','John')
ages<-c(12,10,15)
dfkids<-data.frame(kids, ages)
View(dfkids)

dfkids[[1]]
dfkids[2,]
dfkids[1,2]

dfkids
dfkids[,2]
mean(dfkids[,2])
mean(dfkids$ages)

# 28/4/2022
x<-c(2, NA, 6, 8)
is.na(x)
anyNA(x)

x<-factor(c('yes','yes','no','yes','no'))

f = c('K','K','none','N', 'P','P','N','N','none','P','K','none','Bonkers')
fertilizer = factor(f)
str(fertilizer)
table(fertilizer)
class(f)

Q1<-c('A','B','C','D','E','F','G','H','I','J')
Q2<-c(0,0,1,0,2,1,1,0,2,3)
t = table(Q1, Q2)
t

x<-list(a=list(10,12,14), b=c(3,14,2.81))
x
x[[2]][1]
x$b[1]


x<-matrix(1:6,2,3)
x[2,3]
x[2,]
x[,]

# 16/5/2022

x<-matrix(rnorm(200),20,10)
apply(x,2,mean)
apply(x,1,mean)
apply(x,c(1,2),mean)

x<-matrix(rnorm(200),20,10)
apply(x,1,quantile,probs=c(0.25,0.75))

x<-c(rnorm(10),runif(10),rnorm(10,1))
f<-gl(3,10) #generate levels 1-3 with each value replicated...
f
tapply(x, f, mean, simplify=F)
tapply(x, f, range, simplify=F)

#str(split(x, list(f1, f2), drop=TRUE))

list(rep(1, 4), rep(2, 3), rep(3, 2), rep(4, 1))
mapply(rep, 1:4, 4:1)

# 19/5/2022
data_punch<-read.table('C:/Users/Joerio Chandra/Documents/BENQ/College/Semester 6/Data Science (STIS3023)/punchcard.txt')
head(data_punch, 10)
View(data_punch)

init_datapunch<-read.table('C:/Users/Joerio Chandra/Documents/BENQ/College/Semester 6/Data Science (STIS3023)/punchcard.txt', nrows=5)
classes_datapunch<-sapply(init_datapunch, class)
classes_datapunch
tabAll_datapunch<-read.table('C:/Users/Joerio Chandra/Documents/BENQ/College/Semester 6/Data Science (STIS3023)/punchcard.txt', colClasses=classes_datapunch)
tabAll_datapunch

install.packages('readxl')
library(readxl)

cameraData1<-read_excel('C:/Users/Joerio Chandra/Documents/BENQ/College/Semester 6/Data Science (STIS3023)/Fixed_Speed_Cameras.xlsx', col_names=F)
head(cameraData1, 10)
tail(cameraData1, 10)
View(cameraData1)

punchcsv<-read.csv('C:/Users/Joerio Chandra/Documents/BENQ/College/Semester 6/Data Science (STIS3023)/punchcard.txt')
head(punchcsv)
class(punchcsv)
View(punchcsv)

#download excel data from internet
TolPriceURL <- 'https://www.data.gov.my/data/dataset/6ab4bd6d-ff87-452b-b3aa-391387f2bfa3/resource/1b88f96c-e60b-49a5-9c7d-ff3ed94b4313/download/senarai-kadar-tol-semasa.xlsx'
download.file(TolPriceURL, destfile = "tolprice.xlsx", mode ="wb")
tolpriceData <- read_xlsx("tolprice.xlsx")
View(tolpriceData)

#cell index = A9:J18, columns A-J, and rows 9-18
tolpricePlus<-read_xlsx('tolprice.xlsx', sheet=2, range='A9:J18')
View(tolpricePlus)

#save data files
write.csv2(data_ounch, 'data_punch1.txt')



# 23/5/2022 - reading data from DB (EXAMPLES ONLY)
library(DBI)
con<-DBI::dbconnect(odbc::odbc(), driver = "SQL Server", server = "localhost", database="", uid="sa", pwd="abc123")

stafftable<-dbGetQuery(con, "select * from staff")
View(stafftable)

average_salary<-mean(complete.cases(stafftable$salary))
average_salary<-mean(!is.na(stafftable$salary))
average_salary

which(stafftable$fName == "David")
stafftable[which(stafftable$fName == "David"),]
stafftable[which(stafftable$position == "Assistant"),]

# [EXERCISE] read 2 or more Excel files & do some calculation
#           using data in all files - write function + calculate

# # # # # #



# 26/5/2022
# ??? copy from recording
head(iris, 10)
tail(iris, 10)
subset(iris, Species=='setosa')[1:10,]
subset(iris, Species=='versicolor')[1:10,]
subset(iris, Species=='virginica')[1:10,]

mean(iris$Sepal.Length, iris$Sepal.Width)
sum(iris$Sepal.Length)

subset(iris, Petal.Width < 2)[, 'Species']
subset(iris, Petal.Length < 2)[, 'Species']
subset(iris, Sepal.Width < 2)[, 'Species']
subset(iris, Sepal.Length < 2)[, 'Species']

# 30/5/2022 - String Manipulation
cameraData <- read.csv('C:/Users/Joerio Chandra/Documents/BENQ/College/Semester 6/Data Science (STIS3023)/Fixed_Speed_Cameras.csv')
View(cameraData)
names(cameraData)
toupper(names(cameraData))

ustweet<-read.csv('us_twitter.txt') #->converts txt to tbl
View(ustweet)

ustweet <- readLines('us_tweet.txt') #->reads as txt
View(ustweet)
class(ustweet)
ustweet(6:10)

ustweetsplit<-strsplit(ustweet[1], " ")
ustweetsplit<-unlist(ustweetsplit)
ustweetsplit[108]
class(ustweetsplit)

ustweetsplit1 <- strsplit(ustweet[1], "\\.")
ustweetsplit1[1]
class(ustweetsplit1[1])
ustweetsplit1[[1]][3]
ustweetsplit1 <- list(ustweetsplit1)
ustweetsplit1

# https://github.com/DataScienceSpecialization/courses
fileUrl1 <- 'https://raw.githubusercontent.com/DataScienceSpecialization/courses/master/03_GettingData/04_01_editingTextVariables/data/reviews.csv'
fileUrl2 <- 'https://raw.githubusercontent.com/DataScienceSpecialization/courses/master/03_GettingData/04_01_editingTextVariables/data/solutions.csv'

download.file(fileUrl2, destfile = 'solutions.csv')
download.file(fileUrl1, destfile = 'reviews.csv')
reviews <- read.csv('reviews.csv')
solutions <- read.csv('solutions.csv')
head(reviews, 3)
head(solutions, 3)
names(reviews)
      
sub("_", "", names(reviews))
gsub("_", "", names("this_is_a_test"))

View(cameraData)
grep('Alameda', cameraData$intersection, value=TRUE)
grepl('Alameda', cameraData$intersection)

grep('Beauty', ustweet)



# 2/6/2022 - regular expression
text1<-"Doctor Strange will return"
paste0(text1, "-", "to the MCU")

nuclear<-"Ohh, I just learned thatt to keep myself alive after a nuclear blast! All I have to do milk some rats then drink all the milk. Aweosme. :}

Laozi says nuclear weapons are mas macho.

Chaos in a country that has nuclear weapons - not good. x

my nephew is trying to teach me nuclear physics, or possibly just trying to show off lol"

grep("macho", nuclear, ignore.case = TRUE, value = TRUE)
write(nuclear, file = "nuclear.txt")
nuclear<-readLines("nuclear.txt")
nuclear

grep("^Laozi", nuclear, ignore.case = TRUE, value = TRUE)
grep("lol$", nuclear, ignore.case = TRUE, value = TRUE)
grep("[Xx]", nuclear, ignore.case = TRUE, value = TRUE)
grep("[Rr][Aa][Tt][Ss]", nuclear, ignore.case = TRUE, value = TRUE)

# 13/6/2022
x<-c(1,2,3,4)
prod(x)
cumsum(x)
cumprod(x)

z<-matrix(c(1,5,6,2,3,2),3,2)
z
min(z[,1],z[,2])
pmin(z[,1],z[,2]) # --> compare with col1 & 2
max(z[,1],z[,2])
pmax(z[,1],z[,2])

y<-c(13,5,12,5)
sort(y)[2] # --> 2nd smallest number
sort(y)
sort(y, decreasing = T)
order(y)

rank(z)
rank(-z)
rank(z, ties.method = "min") # --> with tied numbers(?)
rank(z, ties.method = "max")

quantile(z)

#t-test
score1<-c(3,3,3,12,15,16,17,19,23,24,32)
score2<-c(20,13,13,20,29,32,23,20,25,15,30)

#null hypothesis - no different score before & after
t.test(score1, score2, alternative = "two.sided", paired = T)


# 16/6/2022 - correlation
# we want to know whether the average weight of mice differs from 25g (two-tailed/sample test)
# null hypothesis is average weight of the have no ...


# 20/6/2022 - Graph Exploratory
pollution<-read.csv("https://raw.githubusercontent.com/DataScienceSpecialization/courses/master/04_ExploratoryAnalysis/exploratoryGraphs/data/avgpm25.csv")
View(pollution)

with(pollution, plot(fips, pm25))
title(main = "Air Pollution by Countries")
dev.cur()
dev.off() # -> device off

pdf(file = "pollutionplot.pdf")

head(cars)
with(cars, plot(speed, dist))
title(main = "Cars and Speed")
text(7, 110, "Speed Kills")

head(airquality)
hist(airquality$Ozone, main = "Ozone Levels in NY")

boxplot(airquality$Ozone, main = "Ozone Levels in NY")

boxplot(Ozone ~ Month, airquality)
dev.cur()



# 23/6/2022
library(lattice)
xyplot(Ozone ~ Wind, airquality, col="red", pch=1, main="Ozone and Wind")

state1<-data.frame(state.x77, region=state.region)
View(state1)

xyplot(Life.Exp ~ Income | region, data = state1, col="purple", layout = c(4, 1))

dev.off()

xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout=c(5, 1))

#ggplot2 - tidyverse
install.packages("ggplot2")
library("ggplot2")

head(mpg)
nrow(mpg)

qplot(displ, hwy, data = mpg, color=drv)



# 30/6/2022
install.packages('glue')
install.packages("testthat")
install.packages("pkgload")
install.packages('devtools', repos='https://cran.rstudio.com/', dependencies=TRUE)
library(devtools)
install_github('ramnathv/slidify')
install_github('ramnathv/slidifyLibraries')
library(slidify)

author("mydeck")

install.packages('dplyr')

install.packages('installr')
install.Rtools()
